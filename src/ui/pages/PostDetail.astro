---
import { type InferEntrySchema, type Render } from "astro:content";
import Layout from "@/ui/layouts/Layout.astro";
import Container from "@/ui/components/Container.astro";
import { getLangFromUrl, useTranslation } from "@/i18n/utils";
import { getIntlLongDate } from "@/utils/date";
import { calculateReadingTime } from "@/utils/reading-time";

interface Props {
  post: {
    id: string;
    slug: string;
    body: string;
    collection: "posts";
    data: InferEntrySchema<"posts">;
  } & {
    render(): Render[".md"];
  };
}

const { post } = Astro.props;

const lang = getLangFromUrl(Astro.url);

const t = useTranslation(lang);

const formatedDate = getIntlLongDate(post.data.date, lang);

const { Content } = await post.render();
---

<Layout title={post.data.title} description={post.data.description}>
  <Container>
    <div>
      <header class="mb-6">
        <div
          transition:name={`title-${post.id}`}
          class="animate-blur-fade text-2xl mb-2 font-semibold text-black dark:text-white"
        >
          {post.data.title}
        </div>
        <div class="flex flex-col gap-1">
          <span
            class="animate-blur-fade text-sm text-stone-500 dark:text-stone-400"
            >{formatedDate}</span
          >
          <span
            class="animate-blur-fade text-sm text-stone-500 dark:text-stone-400"
            >{
              t("reading_time.label", { time: calculateReadingTime(post.body) })
            }</span
          >
        </div>
      </header>
      <main class="animate-blur-fade prose dark:prose-invert">
        <Content />
      </main>
    </div>
  </Container>
</Layout>
